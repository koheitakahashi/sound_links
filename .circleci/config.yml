version: 2.1

executors:
  default:
    docker:
      - image: circleci/ruby:3.0.1
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: ~/project/api/vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: user
          RAILS_ENV: test
      - image: circleci/postgres:12.3
        environment:
          POSTGRES_USER: user
          POSTGRES_DB: sound_links_test
          POSTGRES_PASSWORD: "postgres"

commands:
  setup:
    steps:
      - restore_cache:
         keys:
            - gem-cache-v1-{{ checksum "~/project/api/Gemfile.lock" }}
            - gem-cache-v1

      - run:
          name: Update bundler
          command: gem update bundler
          working_directory: ~/project/api

      - run:
          name: Set bundle config clean
          command: bundle config set clean "true"
          working_directory: ~/project/api

      - run:
          name: Install gems
          command: bundle check || bundle install
          working_directory: ~/project/api

      - save_cache:
          key: gem-cache-v1-{{ checksum "~/project/api/Gemfile.lock" }}
          paths:
            - ~/project/api/vendor/bundle

jobs:
  test:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Run Lint
          command: bundle exec rubocop
          working_directory: ~/project/api

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
          working_directory: ~/project/api

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace
          working_directory: ~/project/api

      - run:
          name: Run RSpec
          command: bundle exec rspec
          working_directory: ~/project/api

      - store_test_results:
          path: tmp/test-results

workflows:
  version: 2.1

  build_and_test:
    jobs:
      - test
