version: 2.1

executors:
  default:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
      - image: circleci/postgres:12.3
        environment:
          POSTGRES_USER: user
          POSTGRES_DB: sound_links_test
          POSTGRES_PASSWORD: "postgres"


commands:
  setup:
    steps:
      - restore_cache:
         keys:
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1

      - run:
          name: Update bundler
          command: gem update bundler

      - run:
          name: Set bundle config clean
          command: bundle config set clean "true"

      - run:
          name: Install gems
          command: bundle check || bundle install

      - save_cache:
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}
            - yarn-cache-v1

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
  test:
    executor: default
    steps:
      - checkout
      - setup
      - run:
          name: Run Lint
          command: |
            bundle exec rubocop
            bin/yarn eslint app/javascript/packs/*.ts
            bin/yarn eslint app/javascript/src/*.ts
            bin/yarn eslint app/javascript/src/*.vue
            bin/yarn eslint app/javascript/src/*/*.vue
            bin/yarn eslint app/javascript/src/*/*.ts
            bin/yarn stylelint app/javascript/assets/stylesheets/layout/*.scss
            bin/yarn stylelint app/javascript/assets/stylesheets/modules/*.scss
            bin/yarn stylelint app/javascript/assets/stylesheets/application.scss

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run RSpec
          command: bundle exec rspec

      - store_test_results:
          path: tmp/test-results

      - store_artifacts:
          path: tmp/screenshots
          destination: screenshots

workflows:
  version: 2.1

  build_and_test:
    jobs:
      - test
